{
 "meta": {
  "generator": "0.11.1",
  "format": 22,
  "date": 1656654544027
 },
 "custom": {
  "general": {
   "name": "General",
   "files": {
    "welcome": {
     "name": "Welcome",
     "type": "md",
     "content": "## Welcome\n\n<strong>Welcome, this is \"@djs-modules/economy\" module!</strong> <br />\n<strong>\"@djs-modules/economy\" is a module that allows you to create an economy system in your Discord bot.</strong>\n\n### Warning!\n\n<strong>To use this module You need to have [NodeJS v14 or Above](https://nodejs.org/) installed!</strong>\n\n## Features\n\n<span><strong>[ðŸ”‘] Built in TypeScript</strong></span> <br />\n<span><strong>[âš™] 100% Promise-based</strong></span> <br />\n<span><strong>[ðŸ™‚] TypeScript Support</strong></span> <br />\n\n## Installing\n\n<span><code>npm i @djs-modules/economy</code></span> <br />\n<span><code>yarn add @djs-modules/economy</code></span>\n\n## This module uses\n\n<span><strong>[1] [enmap (Database)](https://npmjs.com/package/enmap/)</strong></span> <br />\n<span><strong>[2] [TypeScript (Compiller)](https://npmjs.com/package/typescript/)</strong></span> <br />\n<span><strong>[3] [undici (Version Control)](https://npmjs.com/package/undici/)</strong></span>\n\n## Links\n\n<span><strong>[1] [Documentation (soon)](https://djs-modules.js.org/)</strong></span> <br />\n<span><strong>[2] [Module Author](https://npmjs.com/~djs-modules/)</strong></span> <br />\n<span><strong>[3] [Support Server](https://discord.gg/zsTgXs24k2/)</strong></span>\n",
     "path": "pages/general/welcome.md"
    }
   }
  }
 },
 "classes": [
  {
   "name": "BalanceManager",
   "description": "Balance Class",
   "construct": {
    "name": "BalanceManager",
    "params": [
     {
      "name": "options",
      "description": "Module Options",
      "type": [
       [
        [
         "Options"
        ]
       ]
      ]
     }
    ]
   },
   "props": [
    {
     "name": "options",
     "description": "Module Options",
     "type": [
      [
       [
        "Options"
       ]
      ]
     ],
     "meta": {
      "line": 25,
      "file": "BalanceManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "database",
     "description": "Module Database",
     "type": [
      [
       [
        "DBManager"
       ]
      ]
     ],
     "meta": {
      "line": 33,
      "file": "BalanceManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "history",
     "description": "History Manager",
     "type": [
      [
       [
        "HistoryManager"
       ]
      ]
     ],
     "meta": {
      "line": 40,
      "file": "BalanceManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "methods": [
    {
     "name": "add",
     "description": "Method that Adds Balance to User.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "amount",
       "description": "Amount to Add",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "BalanceObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 48,
      "file": "BalanceManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "subtract",
     "description": "Method that Subtracts Balance to User.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "amount",
       "description": "Amount to Subtract",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "BalanceObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 83,
      "file": "BalanceManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "set",
     "description": "Method that Sets Balance to User.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "value",
       "description": "Value to Set",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "BalanceObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 122,
      "file": "BalanceManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "get",
     "description": "Method that Returns User Balance.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "Number",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 157,
      "file": "BalanceManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "meta": {
    "line": 12,
    "file": "BalanceManager.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "BankManager",
   "description": "Bank Class",
   "construct": {
    "name": "BankManager",
    "params": [
     {
      "name": "options",
      "description": "Module Options",
      "type": [
       [
        [
         "Options"
        ]
       ]
      ]
     }
    ]
   },
   "props": [
    {
     "name": "options",
     "description": "Module Options",
     "type": [
      [
       [
        "Options"
       ]
      ]
     ],
     "meta": {
      "line": 25,
      "file": "BankManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "database",
     "description": "Module Database",
     "type": [
      [
       [
        "DBManager"
       ]
      ]
     ],
     "meta": {
      "line": 33,
      "file": "BankManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "history",
     "description": "History Manager",
     "type": [
      [
       [
        "HistoryManager"
       ]
      ]
     ],
     "meta": {
      "line": 40,
      "file": "BankManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "methods": [
    {
     "name": "add",
     "description": "Method that Adds Bank Balance to User.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "amount",
       "description": "Amount to Add",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "BalanceObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 48,
      "file": "BankManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "subtract",
     "description": "Method that Subtracts Bank Balance to User.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "amount",
       "description": "Amount to Subtract",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "BalanceObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 83,
      "file": "BankManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "set",
     "description": "Method that Sets Bank Balance to User.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "value",
       "description": "Value to Set",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "BalanceObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 122,
      "file": "BankManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "get",
     "description": "Method that Returns User Bank.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "number",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 157,
      "file": "BankManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "deposit",
     "description": "Method that Deposits to Bank.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "amount",
       "description": "Amount to Deposit",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "BalanceObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 177,
      "file": "BankManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "withdraw",
     "description": "Method that Withdraws from Bank.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "amount",
       "description": "Amount to Withdraw",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "BalanceObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 220,
      "file": "BankManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "meta": {
    "line": 12,
    "file": "BankManager.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "CooldownManager",
   "description": "Cooldown Class",
   "construct": {
    "name": "CooldownManager",
    "params": [
     {
      "name": "options",
      "description": "Module Options",
      "type": [
       [
        [
         "Options"
        ]
       ]
      ]
     }
    ]
   },
   "props": [
    {
     "name": "options",
     "description": "Module Options",
     "type": [
      [
       [
        "Options"
       ]
      ]
     ],
     "meta": {
      "line": 23,
      "file": "CooldownManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "database",
     "description": "Module Database",
     "type": [
      [
       [
        "DBManager"
       ]
      ]
     ],
     "meta": {
      "line": 31,
      "file": "CooldownManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "methods": [
    {
     "name": "create",
     "description": "Method that Creates Cooldown.",
     "params": [
      {
       "name": "type",
       "description": "Cooldown Type",
       "type": [
        [
         [
          "CooldownType"
         ]
        ]
       ]
      },
      {
       "name": "amount",
       "description": "Amount",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      },
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 39,
      "file": "CooldownManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "get",
     "description": "Method that Removes Cooldown.",
     "params": [
      {
       "name": "type",
       "description": "Cooldown Type",
       "type": [
        [
         [
          "CooldownType"
         ]
        ]
       ]
      },
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "EconomyUserRewardObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 83,
      "file": "CooldownManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "meta": {
    "line": 10,
    "file": "CooldownManager.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "DBManager",
   "description": "Database Manager",
   "construct": {
    "name": "DBManager",
    "params": [
     {
      "name": "Options",
      "description": "Module Options",
      "type": [
       [
        [
         "Options"
        ]
       ]
      ]
     }
    ]
   },
   "props": [
    {
     "name": "options",
     "description": "Module Options",
     "type": [
      [
       [
        "Options"
       ]
      ]
     ],
     "meta": {
      "line": 22,
      "file": "DBManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "database",
     "description": "Module Database",
     "type": [
      [
       [
        "Enmap",
        "<"
       ],
       [
        "string",
        ", "
       ],
       [
        "EconomyGuildData",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 30,
      "file": "DBManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "methods": [
    {
     "name": "get",
     "description": "Method that Returns Economy Guild Data from Database",
     "params": [
      {
       "name": "id",
       "description": "Discord Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "EconomyGuildData",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 42,
      "file": "DBManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "set",
     "description": "Method that Changes Something from Database",
     "params": [
      {
       "name": "id",
       "description": "Discord Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "value",
       "description": "Value to Set",
       "type": [
        [
         [
          "any"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 57,
      "file": "DBManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "setProp",
     "description": "Method that Sets Value to Key from Database",
     "params": [
      {
       "name": "guildID",
       "description": "Discord Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "Discord User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "key",
       "description": "Property Name",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "value",
       "description": "Value to Set",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 73,
      "file": "DBManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "push",
     "description": "Method that Pushes Something from Database",
     "params": [
      {
       "name": "id",
       "description": "Discord Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "value",
       "description": "Value to Push",
       "type": [
        [
         [
          "any"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 103,
      "file": "DBManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "add",
     "description": "Method that Adds Value to Key from Database",
     "params": [
      {
       "name": "guildID",
       "description": "Discord Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "Discord User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "key",
       "description": "Property Name",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "value",
       "description": "Value to Set",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 119,
      "file": "DBManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "subtract",
     "description": "Method that Subtracts Value from Key from Database",
     "params": [
      {
       "name": "guildID",
       "description": "Discord Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "Discord User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "key",
       "description": "Property Name",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "value",
       "description": "Value to Set",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 149,
      "file": "DBManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "createUser",
     "description": "Method that Creates User Data",
     "params": [
      {
       "name": "guildID",
       "description": "Discord Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "Discord User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "EconomyUserData",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 179,
      "file": "DBManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "createGuild",
     "description": "Method that Creates Guild Data",
     "params": [
      {
       "name": "guildID",
       "description": "Discord Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "EconomyGuildData",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 231,
      "file": "DBManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "meta": {
    "line": 9,
    "file": "DBManager.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "Economy",
   "description": "Economy Class",
   "construct": {
    "name": "Economy",
    "params": [
     {
      "name": "options",
      "description": "Module Options",
      "type": [
       [
        [
         "Options"
        ]
       ]
      ]
     }
    ]
   },
   "props": [
    {
     "name": "options",
     "description": "Module Options",
     "type": [
      [
       [
        "Options"
       ]
      ]
     ],
     "meta": {
      "line": 38,
      "file": "Economy.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "database",
     "description": "Module Database",
     "type": [
      [
       [
        "DBManager"
       ]
      ]
     ],
     "meta": {
      "line": 46,
      "file": "Economy.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "version",
     "description": "Module Version",
     "type": [
      [
       [
        "string"
       ]
      ]
     ],
     "meta": {
      "line": 53,
      "file": "Economy.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "balance",
     "description": "Balance Manager",
     "type": [
      [
       [
        "BalanceManager"
       ]
      ]
     ],
     "meta": {
      "line": 60,
      "file": "Economy.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "bank",
     "description": "Bank Manager",
     "type": [
      [
       [
        "BankManager"
       ]
      ]
     ],
     "meta": {
      "line": 67,
      "file": "Economy.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "shop",
     "description": "Shop Manager",
     "type": [
      [
       [
        "ShopManager"
       ]
      ]
     ],
     "meta": {
      "line": 74,
      "file": "Economy.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "items",
     "description": "Inventory Manager",
     "type": [
      [
       [
        "ItemsManager"
       ]
      ]
     ],
     "meta": {
      "line": 81,
      "file": "Economy.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "rewards",
     "description": "Rewards Manager",
     "type": [
      [
       [
        "RewardsManager"
       ]
      ]
     ],
     "meta": {
      "line": 88,
      "file": "Economy.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "history",
     "description": "History Manager",
     "type": [
      [
       [
        "HistoryManager"
       ]
      ]
     ],
     "meta": {
      "line": 95,
      "file": "Economy.ts",
      "path": "src/classes"
     }
    }
   ],
   "methods": [
    {
     "name": "leaderboard",
     "description": "Method that Returns Guild Balance Leaderboard by Balance.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "null",
        "|"
       ],
       [
        "Array",
        "<"
       ],
       [
        "Leaderboard",
        ">>"
       ]
      ]
     ],
     "meta": {
      "line": 105,
      "file": "Economy.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "init",
     "description": "Method that Initializing Module.",
     "access": "private",
     "async": true,
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 137,
      "file": "Economy.ts",
      "path": "src/classes"
     }
    }
   ],
   "meta": {
    "line": 25,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "HistoryManager",
   "description": "HistoryManager Class",
   "construct": {
    "name": "HistoryManager",
    "params": [
     {
      "name": "options",
      "description": "Module Options",
      "type": [
       [
        [
         "Options"
        ]
       ]
      ]
     }
    ]
   },
   "props": [
    {
     "name": "options",
     "description": "Module Options",
     "type": [
      [
       [
        "Options"
       ]
      ]
     ],
     "meta": {
      "line": 27,
      "file": "HistoryManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "database",
     "description": "Module Database",
     "type": [
      [
       [
        "DBManager"
       ]
      ]
     ],
     "meta": {
      "line": 35,
      "file": "HistoryManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "methods": [
    {
     "name": "create",
     "description": "Method that creates history object in user's history",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "action",
       "description": "Action",
       "type": [
        [
         [
          "ActionType"
         ]
        ]
       ]
      },
      {
       "name": "amount",
       "description": "Amount",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "EconomyUserHistory",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 43,
      "file": "HistoryManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "delete",
     "description": "Method that removes history object from user's history",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "id",
       "description": "History Object ID",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        "|"
       ],
       [
        "Array",
        "<"
       ],
       [
        "EconomyUserHistory",
        ">>"
       ]
      ]
     ],
     "meta": {
      "line": 80,
      "file": "HistoryManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "all",
     "description": "Method that returns all the user's history",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        "|"
       ],
       [
        "Array",
        "<"
       ],
       [
        "EconomyUserHistory",
        ">>"
       ]
      ]
     ],
     "meta": {
      "line": 124,
      "file": "HistoryManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "meta": {
    "line": 14,
    "file": "HistoryManager.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "ItemsManager",
   "description": "Items Manager Class",
   "construct": {
    "name": "ItemsManager",
    "params": [
     {
      "name": "options",
      "description": "Module Options",
      "type": [
       [
        [
         "Options"
        ]
       ]
      ]
     }
    ]
   },
   "props": [
    {
     "name": "options",
     "description": "Module Options",
     "type": [
      [
       [
        "Options"
       ]
      ]
     ],
     "meta": {
      "line": 27,
      "file": "ItemsManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "database",
     "description": "Module Database",
     "type": [
      [
       [
        "DBManager"
       ]
      ]
     ],
     "meta": {
      "line": 35,
      "file": "ItemsManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "balance",
     "description": "Balance Manager",
     "type": [
      [
       [
        "BalanceManager"
       ]
      ]
     ],
     "meta": {
      "line": 42,
      "file": "ItemsManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "history",
     "description": "History Manager",
     "type": [
      [
       [
        "HistoryManager"
       ]
      ]
     ],
     "meta": {
      "line": 49,
      "file": "ItemsManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "methods": [
    {
     "name": "buy",
     "description": "Method that Buys an Item from Shop.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "itemID",
       "description": "Item ID",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        "|"
       ],
       [
        "ErrorObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 57,
      "file": "ItemsManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "sell",
     "description": "Method that Sells an Item from Inventory.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "itemID",
       "description": "Item ID",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        "|"
       ],
       [
        "ErrorObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 118,
      "file": "ItemsManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "use",
     "description": "Method that Uses an Item from Inventory.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "itemID",
       "description": "Item ID",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "EconomyGuildShopItem",
        "|"
       ],
       [
        "ErrorObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 170,
      "file": "ItemsManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "get",
     "description": "Method that Returns an Item Data from Inventory.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "itemID",
       "description": "Item ID",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "EconomyGuildShopItem",
        "|"
       ],
       [
        "ErrorObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 228,
      "file": "ItemsManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "all",
     "description": "Method that Returns All the Items from Inventory.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "Array",
        "<"
       ],
       [
        "EconomyGuildShopItem",
        ">|"
       ],
       [
        "ErrorObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 283,
      "file": "ItemsManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "meta": {
    "line": 14,
    "file": "ItemsManager.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "RewardsManager",
   "description": "Rewards Class",
   "construct": {
    "name": "RewardsManager",
    "params": [
     {
      "name": "options",
      "description": "Module Options",
      "type": [
       [
        [
         "Options"
        ]
       ]
      ]
     }
    ]
   },
   "props": [
    {
     "name": "options",
     "description": "Module Options",
     "type": [
      [
       [
        "Options"
       ]
      ]
     ],
     "meta": {
      "line": 29,
      "file": "RewardsManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "database",
     "description": "Module Database",
     "type": [
      [
       [
        "DBManager"
       ]
      ]
     ],
     "meta": {
      "line": 37,
      "file": "RewardsManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "balance",
     "description": "Balance Manager",
     "type": [
      [
       [
        "BalanceManager"
       ]
      ]
     ],
     "meta": {
      "line": 44,
      "file": "RewardsManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "cooldowns",
     "description": "Cooldown Manager",
     "type": [
      [
       [
        "CooldownManager"
       ]
      ]
     ],
     "meta": {
      "line": 51,
      "file": "RewardsManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "history",
     "description": "History Manager",
     "type": [
      [
       [
        "HistoryManager"
       ]
      ]
     ],
     "meta": {
      "line": 58,
      "file": "RewardsManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "methods": [
    {
     "name": "daily",
     "description": "Method that Adds Daily Reward to User.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "BalanceObject",
        "|"
       ],
       [
        "ErrorObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 66,
      "file": "RewardsManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "weekly",
     "description": "Method that Adds Weekly Reward to User.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "BalanceObject",
        "|"
       ],
       [
        "ErrorObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 109,
      "file": "RewardsManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "work",
     "description": "Method that Adds Work Reward to User.",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "userID",
       "description": "User ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "BalanceObject",
        "|"
       ],
       [
        "ErrorObject",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 161,
      "file": "RewardsManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "meta": {
    "line": 16,
    "file": "RewardsManager.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "ShopManager",
   "description": "Balance Class",
   "construct": {
    "name": "ShopManager",
    "params": [
     {
      "name": "options",
      "description": "Module Options",
      "type": [
       [
        [
         "Options"
        ]
       ]
      ]
     }
    ]
   },
   "props": [
    {
     "name": "options",
     "description": "Module Options",
     "type": [
      [
       [
        "Options"
       ]
      ]
     ],
     "meta": {
      "line": 24,
      "file": "ShopManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "database",
     "description": "Module Database",
     "type": [
      [
       [
        "DBManager"
       ]
      ]
     ],
     "meta": {
      "line": 32,
      "file": "ShopManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "balance",
     "description": "Balance Manager",
     "type": [
      [
       [
        "BalanceManager"
       ]
      ]
     ],
     "meta": {
      "line": 39,
      "file": "ShopManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "methods": [
    {
     "name": "create",
     "description": "Method that Creates Item for Shop",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "data",
       "type": [
        [
         [
          "EconomyGuildShopItem"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "EconomyGuildShopItem",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 47,
      "file": "ShopManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "delete",
     "description": "Method that Deletes Item from Shop",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "itemID",
       "description": "Item ID",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 79,
      "file": "ShopManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "update",
     "description": "Method that Change Something in Item from Shop",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "itemID",
       "description": "Item ID",
       "type": [
        [
         [
          "number"
         ]
        ]
       ]
      },
      {
       "name": "key",
       "description": "Key to Change",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      },
      {
       "name": "value",
       "description": "Value to Change",
       "type": [
        [
         [
          "any"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        "|"
       ],
       [
        "EconomyGuildShopItem",
        ">"
       ]
      ]
     ],
     "meta": {
      "line": 107,
      "file": "ShopManager.ts",
      "path": "src/classes"
     }
    },
    {
     "name": "all",
     "description": "Method that Returns All the Items from Shop",
     "params": [
      {
       "name": "guildID",
       "description": "Guild ID",
       "type": [
        [
         [
          "string"
         ]
        ]
       ]
      }
     ],
     "returns": [
      [
       [
        "Promise",
        "<"
       ],
       [
        "boolean",
        "|"
       ],
       [
        "Array",
        "<"
       ],
       [
        "EconomyGuildShopItem",
        ">>"
       ]
      ]
     ],
     "meta": {
      "line": 139,
      "file": "ShopManager.ts",
      "path": "src/classes"
     }
    }
   ],
   "meta": {
    "line": 11,
    "file": "ShopManager.ts",
    "path": "src/classes"
   }
  }
 ],
 "interfaces": [],
 "typedefs": [
  {
   "name": "Options",
   "description": "Module Options",
   "type": [
    [
     [
      "Object"
     ]
    ]
   ],
   "props": [
    {
     "name": "DBName",
     "description": "Economy Database Name",
     "optional": true,
     "type": [
      [
       [
        "string"
       ]
      ]
     ]
    },
    {
     "name": "DBPath",
     "description": "Economy Database Path",
     "optional": true,
     "type": [
      [
       [
        "string"
       ]
      ]
     ]
    },
    {
     "name": "rewards",
     "description": "Economy Rewards",
     "type": [
      [
       [
        "Rewards"
       ]
      ]
     ]
    }
   ],
   "meta": {
    "line": 179,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "Rewards",
   "description": "Economy Rewards",
   "type": [
    [
     [
      "Object"
     ]
    ]
   ],
   "props": [
    {
     "name": "daily",
     "description": "Daily Reward",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "weekly",
     "description": "Weekly Reward",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "work",
     "description": "Work Reward",
     "type": [
      [
       [
        "number"
       ]
      ],
      [
       [
        "Array",
        "<"
       ],
       [
        "number",
        ">"
       ]
      ]
     ]
    }
   ],
   "meta": {
    "line": 187,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "EconomyGuildData",
   "description": "Economy Guild Data",
   "type": [
    [
     [
      "Object"
     ]
    ]
   ],
   "props": [
    {
     "name": "users",
     "description": "Guild Users Array",
     "type": [
      [
       [
        "Array",
        "<"
       ],
       [
        "EconomyUserData",
        ">"
       ]
      ]
     ]
    },
    {
     "name": "shop",
     "description": "Guild Shop Array",
     "type": [
      [
       [
        "EconomyGuildShopItem"
       ]
      ]
     ]
    }
   ],
   "meta": {
    "line": 195,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "EconomyUserData",
   "description": "Economy User Data",
   "type": [
    [
     [
      "Object"
     ]
    ]
   ],
   "props": [
    {
     "name": "id",
     "description": "User ID",
     "type": [
      [
       [
        "string"
       ]
      ]
     ]
    },
    {
     "name": "balance",
     "description": "User Balance",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "bank",
     "description": "User Bank",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "rewards",
     "description": "User Rewards",
     "type": [
      [
       [
        "EconomyUserRewardsData"
       ]
      ]
     ]
    },
    {
     "name": "inventory",
     "description": "User Inventory",
     "type": [
      [
       [
        "Array",
        "<"
       ],
       [
        "EconomyUserInventory",
        ">"
       ]
      ]
     ]
    },
    {
     "name": "history",
     "description": "User History",
     "type": [
      [
       [
        "Array",
        "<"
       ],
       [
        "EconomyUserHistory",
        ">"
       ]
      ]
     ]
    }
   ],
   "meta": {
    "line": 202,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "EconomyUserRewardsData",
   "description": "Economy User Rewards Data",
   "type": [
    [
     [
      "Object"
     ]
    ]
   ],
   "props": [
    {
     "name": "daily",
     "description": "Daily Reward",
     "type": [
      [
       [
        "EconomyUserRewardObject"
       ]
      ]
     ]
    },
    {
     "name": "weekly",
     "description": "Weekly Reward",
     "type": [
      [
       [
        "EconomyUserRewardObject"
       ]
      ]
     ]
    },
    {
     "name": "work",
     "description": "Work Reward",
     "type": [
      [
       [
        "EconomyUserRewardObject"
       ]
      ]
     ]
    }
   ],
   "meta": {
    "line": 213,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "EconomyUserRewardObject",
   "description": "Economy User Reward Object",
   "type": [
    [
     [
      "Object"
     ]
    ]
   ],
   "props": [
    {
     "name": "amount",
     "description": "Amount",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "collectedAt",
     "description": "Collected At",
     "optional": true,
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "collectAt",
     "description": "Collect At",
     "optional": true,
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    }
   ],
   "meta": {
    "line": 221,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "EconomyUserInventory",
   "description": "Economy User Rewards Data",
   "type": [
    [
     [
      "Object"
     ]
    ]
   ],
   "props": [
    {
     "name": "itemID",
     "description": "Item ID",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "name",
     "description": "Item Name",
     "type": [
      [
       [
        "string"
       ]
      ]
     ]
    },
    {
     "name": "description",
     "description": "Item Description",
     "optional": true,
     "type": [
      [
       [
        "string"
       ]
      ]
     ]
    },
    {
     "name": "cost",
     "description": "Item Cost",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "role",
     "description": "Item Role",
     "optional": true,
     "type": [
      [
       [
        "string"
       ]
      ]
     ]
    },
    {
     "name": "date",
     "description": "Date of Purchase",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    }
   ],
   "meta": {
    "line": 229,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "EconomyGuildShopItem",
   "description": "Economy Guild Shop Item",
   "type": [
    [
     [
      "Object"
     ]
    ]
   ],
   "props": [
    {
     "name": "id",
     "description": "Item ID",
     "optional": true,
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "name",
     "description": "Item Name",
     "type": [
      [
       [
        "string"
       ]
      ]
     ]
    },
    {
     "name": "description",
     "description": "Item Description",
     "optional": true,
     "type": [
      [
       [
        "string"
       ]
      ]
     ]
    },
    {
     "name": "cost",
     "description": "Item Cost",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "role",
     "description": "Item Role",
     "optional": true,
     "type": [
      [
       [
        "string"
       ]
      ]
     ]
    }
   ],
   "meta": {
    "line": 240,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "BalanceObject",
   "description": "Balance Object for BalanceManager",
   "type": [
    [
     [
      "Object"
     ]
    ]
   ],
   "props": [
    {
     "name": "amount",
     "description": "Amount",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "balance",
     "description": "User Balance Object",
     "type": [
      [
       [
        "BalancePrettyObject"
       ]
      ]
     ]
    }
   ],
   "meta": {
    "line": 250,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "BalancePrettyObject",
   "description": "Pretty Object for BalanceObject",
   "type": [
    [
     [
      "Object"
     ]
    ]
   ],
   "props": [
    {
     "name": "before",
     "description": "Balance Before",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "after",
     "description": "Balance After",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    }
   ],
   "meta": {
    "line": 257,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "DepositObject",
   "description": "Deposit Object for BankManager",
   "type": [
    [
     [
      "Object"
     ]
    ]
   ],
   "props": [
    {
     "name": "amount",
     "description": "Amount",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "balance",
     "description": "User Balance Object",
     "type": [
      [
       [
        "BalancePrettyObject"
       ]
      ]
     ]
    },
    {
     "name": "bank",
     "description": "User Bank Object",
     "type": [
      [
       [
        "DepositPrettyObject"
       ]
      ]
     ]
    }
   ],
   "meta": {
    "line": 264,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "DepositPrettyObject",
   "description": "Pretty Object for BalanceObject",
   "type": [
    [
     [
      "Object"
     ]
    ]
   ],
   "props": [
    {
     "name": "before",
     "description": "Before Deposit",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "after",
     "description": "After Deposit",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    }
   ],
   "meta": {
    "line": 272,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "ErrorObject",
   "description": "Error Object",
   "type": [
    [
     [
      "Object"
     ]
    ]
   ],
   "props": [
    {
     "name": "status",
     "description": "true or false",
     "type": [
      [
       [
        "boolean"
       ]
      ]
     ]
    },
    {
     "name": "message",
     "description": "Error Message",
     "optional": true,
     "type": [
      [
       [
        "string"
       ]
      ]
     ]
    },
    {
     "name": "data",
     "description": "Object with Data",
     "optional": true,
     "type": [
      [
       [
        "any"
       ]
      ]
     ]
    }
   ],
   "meta": {
    "line": 279,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "Leaderboard",
   "description": "Guild Leaderboard",
   "type": [
    [
     [
      "Object"
     ]
    ]
   ],
   "props": [
    {
     "name": "userID",
     "description": "User ID",
     "type": [
      [
       [
        "string"
       ]
      ]
     ]
    },
    {
     "name": "balance",
     "description": "User Balance",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "bank",
     "description": "User Bank",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "rank",
     "description": "User Rank in Leaderboard",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    }
   ],
   "meta": {
    "line": 287,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "EconomyUserHistory",
   "description": "Economy User History",
   "type": [
    [
     [
      "Object"
     ]
    ]
   ],
   "props": [
    {
     "name": "id",
     "description": "ID of the Object",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "type",
     "description": "Action",
     "type": [
      [
       [
        "ActionType"
       ]
      ]
     ]
    },
    {
     "name": "amount",
     "description": "Amount",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    },
    {
     "name": "date",
     "description": "Date",
     "type": [
      [
       [
        "number"
       ]
      ]
     ]
    }
   ],
   "meta": {
    "line": 296,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "CooldownType",
   "description": "* daily\n* weekly\n* work",
   "type": [
    [
     [
      "string"
     ]
    ]
   ],
   "meta": {
    "line": 305,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  },
  {
   "name": "ActionType",
   "description": "* daily\n* weekly\n* work\n* buy\n* sell\n* add\n* subtract\n* set\n* bank-add\n* bank-subtract\n* bank-set",
   "type": [
    [
     [
      "string"
     ]
    ]
   ],
   "meta": {
    "line": 312,
    "file": "Economy.ts",
    "path": "src/classes"
   }
  }
 ],
 "externals": []
}